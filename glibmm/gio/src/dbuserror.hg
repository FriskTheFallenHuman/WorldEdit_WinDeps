// -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2 -*-

/* Copyright (C) 2010 The giomm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

_DEFS(giomm,gio)
_PINCLUDE(glibmm/private/interface_p.h)

namespace Gio
{

#ifndef DOXYGEN_SHOULD_SKIP_THIS
//Our custom friend declaration (see below) needs this pre-declaration.
void wrap_init();
#endif // DOXYGEN_SHOULD_SKIP_THIS

namespace DBus
{

//The GMMPROC_EXTRA_NAMESPACE() macro is a hint to generate_wrap_init.pl to put it in the DBus sub-namespace
_GMMPROC_EXTRA_NAMESPACE(DBus)


#m4 _PUSH(SECTION_H_GERROR_PRIVATE)
  //This extra line is only necessary because this class is in a sub-namespace, but we want 
  //it to be used in the wrap_init() of the main namespace. It's an awkward hack.
  friend void Gio::wrap_init(); // uses throw_func()
#m4 _POP()

_WRAP_GERROR(Error, GDBusError, G_DBUS_ERROR, NO_GTYPE)

} //namespace DBus

} // namespace Gio

