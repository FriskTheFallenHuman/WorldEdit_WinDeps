// Generated by gtkmmproc -- DO NOT MODIFY!

#include <gdkmm/gl/tokens.h>
#include <gdkmm/gl/private/tokens_p.h>

// -*- C++ -*-
/* gdkglextmm - C++ Wrapper for GdkGLExt
 * Copyright (C) 2002-2003  Naofumi Yasufuku
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA.
 */

#include <gdk/gdkgltokens.h>
#include <gdk/gdkglenumtypes.h>

const int Gdk::GL::SUCCESS = GDK_GL_SUCCESS;

const int Gdk::GL::ATTRIB_LIST_NONE = GDK_GL_ATTRIB_LIST_NONE;

const int Gdk::GL::DONT_CARE = GDK_GL_DONT_CARE;

const int Gdk::GL::NONE = GDK_GL_NONE;


namespace
{
} // anonymous namespace

// static
GType Glib::Value<Gdk::GL::ConfigAttrib>::value_type()
{
  return gdk_gl_config_attrib_get_type();
}

// static
GType Glib::Value<Gdk::GL::ConfigCaveat>::value_type()
{
  return gdk_gl_config_caveat_get_type();
}

// static
GType Glib::Value<Gdk::GL::VisualType>::value_type()
{
  return gdk_gl_visual_type_get_type();
}

// static
GType Glib::Value<Gdk::GL::TransparentType>::value_type()
{
  return gdk_gl_transparent_type_get_type();
}

// static
GType Glib::Value<Gdk::GL::DrawableTypeMask>::value_type()
{
  return gdk_gl_drawable_type_mask_get_type();
}

// static
GType Glib::Value<Gdk::GL::RenderTypeMask>::value_type()
{
  return gdk_gl_render_type_mask_get_type();
}

// static
GType Glib::Value<Gdk::GL::BufferMask>::value_type()
{
  return gdk_gl_buffer_mask_get_type();
}

// static
GType Glib::Value<Gdk::GL::ConfigError>::value_type()
{
  return gdk_gl_config_error_get_type();
}

// static
GType Glib::Value<Gdk::GL::RenderType>::value_type()
{
  return gdk_gl_render_type_get_type();
}

// static
GType Glib::Value<Gdk::GL::DrawableAttrib>::value_type()
{
  return gdk_gl_drawable_attrib_get_type();
}

// static
GType Glib::Value<Gdk::GL::PbufferAttrib>::value_type()
{
  return gdk_gl_pbuffer_attrib_get_type();
}

// static
GType Glib::Value<Gdk::GL::EventMask>::value_type()
{
  return gdk_gl_event_mask_get_type();
}

// static
GType Glib::Value<Gdk::GL::EventType>::value_type()
{
  return gdk_gl_event_type_get_type();
}

// static
GType Glib::Value<Gdk::GL::DrawableType>::value_type()
{
  return gdk_gl_drawable_type_get_type();
}


